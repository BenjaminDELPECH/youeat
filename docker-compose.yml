version: "3"
services:

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 7080:7080

  db:
    hostname: ${DATABASE_HOST}
    container_name: db
    image: library/mysql:8.0.22
    command: mysqld --default-authentication-plugin=mysql_native_password --max_allowed_packet=20G
    volumes:
      - "./mysql:/var/lib/mysql"
    ports:
      - "${DATABASE_HOST_PORT}:${DATABASE_CONTAINER_PORT}"
    restart: always
    security_opt:
      - seccomp:unconfined
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_ROOT_USER=${DATABASE_USERNAME}
    env_file:
      - .env
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3307"]
        interval: 15s
        timeout: 10s
        retries: 5


  django:
    container_name: django
    restart: always
    build:
      context: ./Django
      dockerfile: Dockerfile
    command: bash -c "./${DJANGO_ENTRYPOINT_DOCKER}"
    volumes:
      - ./Django:/code
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    depends_on:
      - db
    links:
      - db
    env_file:
      - .env

  go2:
    container_name: go2
    restart: always
    build:
      context: ./go_api2
      dockerfile: Dockerfile
    volumes:
      - .:/dockerdev
    ports:
      - "${GO_GIN_PORT}:${GO_GIN_PORT}"
    depends_on:
      - db
    env_file:
      - .env


  quasar2:
    container_name: quasar2
    build:
      context: youeat
      dockerfile: Dockerfile
    ports:
      - ${QUASAR_YOUEAR_PORT}:${QUASAR_YOUEAR_PORT}
    env_file:
      - .env

#
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - django
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d/
      - ./nginx/keys:/etc/keys
    command: [ nginx-debug, '-g', 'daemon off;' ]
    env_file:
      - .env
